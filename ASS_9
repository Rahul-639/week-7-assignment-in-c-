#include <stdio.h>
#include <string.h>
#define MAX_CHAR 26
long long atMostKDistinct(char *s, int k) {
    int n = strlen(s);
    long long count = 0;
    int freq[MAX_CHAR] = {0};
    int left = 0, distinct = 0;

    for (int right = 0; right < n; right++) {
        if (freq[s[right] - 'a'] == 0) {
            distinct++;
        }
        freq[s[right] - 'a']++;
        while (distinct > k) {
            freq[s[left] - 'a']--;
            if (freq[s[left] - 'a'] == 0) {
                distinct--;
            }
            left++;
        }
        count += (right - left + 1);
    }
    return count;
}
long long countExactlyKDistinct(char *s, int k) {
    if (k == 0) return 0;
    return atMostKDistinct(s, k) - atMostKDistinct(s, k - 1);
}
int main() {
    char s[1000006];
    int k;
    scanf("%s", s);
    scanf("%d", &k);
    printf("%lld\n", countExactlyKDistinct(s, k));
    return 0;
}
